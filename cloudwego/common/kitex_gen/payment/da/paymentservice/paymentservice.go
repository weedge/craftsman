// Code generated by Kitex v0.4.3. DO NOT EDIT.

package paymentservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	da "github.com/weedge/craftsman/cloudwego/common/kitex_gen/payment/da"
)

func serviceInfo() *kitex.ServiceInfo {
	return paymentServiceServiceInfo
}

var paymentServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "PaymentService"
	handlerType := (*da.PaymentService)(nil)
	methods := map[string]kitex.MethodInfo{
		"GetAsset": kitex.NewMethodInfo(getAssetHandler, newPaymentServiceGetAssetArgs, newPaymentServiceGetAssetResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "da",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.3",
		Extra:           extra,
	}
	return svcInfo
}

func getAssetHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*da.PaymentServiceGetAssetArgs)
	realResult := result.(*da.PaymentServiceGetAssetResult)
	success, err := handler.(da.PaymentService).GetAsset(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newPaymentServiceGetAssetArgs() interface{} {
	return da.NewPaymentServiceGetAssetArgs()
}

func newPaymentServiceGetAssetResult() interface{} {
	return da.NewPaymentServiceGetAssetResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) GetAsset(ctx context.Context, req *da.GetAssetReq) (r *da.GetAssetResp, err error) {
	var _args da.PaymentServiceGetAssetArgs
	_args.Req = req
	var _result da.PaymentServiceGetAssetResult
	if err = p.c.Call(ctx, "GetAsset", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
