// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/da/domain/user_asset.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/weedge/craftsman/cloudwego/payment/internal/da/model"
)

// MockIUserAssetRepository is a mock of IUserAssetRepository interface.
type MockIUserAssetRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIUserAssetRepositoryMockRecorder
}

// MockIUserAssetRepositoryMockRecorder is the mock recorder for MockIUserAssetRepository.
type MockIUserAssetRepositoryMockRecorder struct {
	mock *MockIUserAssetRepository
}

// NewMockIUserAssetRepository creates a new mock instance.
func NewMockIUserAssetRepository(ctrl *gomock.Controller) *MockIUserAssetRepository {
	mock := &MockIUserAssetRepository{ctrl: ctrl}
	mock.recorder = &MockIUserAssetRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserAssetRepository) EXPECT() *MockIUserAssetRepositoryMockRecorder {
	return m.recorder
}

// GetUserAssets mocks base method.
func (m *MockIUserAssetRepository) GetUserAssets(ctx context.Context, userIds []int64) ([]model.UserAsset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserAssets", ctx, userIds)
	ret0, _ := ret[0].([]model.UserAsset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserAssets indicates an expected call of GetUserAssets.
func (mr *MockIUserAssetRepositoryMockRecorder) GetUserAssets(ctx, userIds interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserAssets", reflect.TypeOf((*MockIUserAssetRepository)(nil).GetUserAssets), ctx, userIds)
}
