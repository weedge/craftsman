// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "github.com/weedge/craftsman/cloudwego/payment/internal/da/model"
)

// IUserAssetRecordRepository is an autogenerated mock type for the IUserAssetRecordRepository type
type IUserAssetRecordRepository struct {
	mock.Mock
}

// GetRecordsByUserId provides a mock function with given fields: ctx, userId
func (_m *IUserAssetRecordRepository) GetRecordsByUserId(ctx context.Context, userId int64) ([]model.UserAssetRecord, string, error) {
	ret := _m.Called(ctx, userId)

	var r0 []model.UserAssetRecord
	if rf, ok := ret.Get(0).(func(context.Context, int64) []model.UserAssetRecord); ok {
		r0 = rf(ctx, userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.UserAssetRecord)
		}
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(context.Context, int64) string); ok {
		r1 = rf(ctx, userId)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, int64) error); ok {
		r2 = rf(ctx, userId)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewIUserAssetRecordRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewIUserAssetRecordRepository creates a new instance of IUserAssetRecordRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIUserAssetRecordRepository(t mockConstructorTestingTNewIUserAssetRecordRepository) *IUserAssetRecordRepository {
	mock := &IUserAssetRecordRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
